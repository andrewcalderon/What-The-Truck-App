{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport authService from '../services/AuthService';\nexport default {\n  name: 'register',\n  data: function data() {\n    return {\n      user: {\n        username: '',\n        password: '',\n        confirmPassword: '',\n        role: 'user'\n      },\n      registrationErrors: false,\n      registrationErrorMsg: 'There were problems registering this user.'\n    };\n  },\n  methods: {\n    register: function register() {\n      var _this = this;\n\n      if (this.user.password != this.user.confirmPassword) {\n        this.registrationErrors = true;\n        this.registrationErrorMsg = 'Password & Confirm Password do not match.';\n      } else {\n        authService.register(this.user).then(function (response) {\n          if (response.status == 201) {\n            _this.$router.push({\n              path: '/login',\n              query: {\n                registration: 'success'\n              }\n            });\n          }\n        })[\"catch\"](function (error) {\n          var response = error.response;\n          _this.registrationErrors = true;\n\n          if (response.status === 400) {\n            _this.registrationErrorMsg = 'Bad Request: Validation Errors';\n          }\n        });\n      }\n    },\n    clearErrors: function clearErrors() {\n      this.registrationErrors = false;\n      this.registrationErrorMsg = 'There were problems registering this user.';\n    }\n  }\n};","map":{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,OAAA,WAAA,MAAA,yBAAA;AAEA,eAAA;EACA,IAAA,EAAA,UADA;EAEA,IAFA,kBAEA;IACA,OAAA;MACA,IAAA,EAAA;QACA,QAAA,EAAA,EADA;QAEA,QAAA,EAAA,EAFA;QAGA,eAAA,EAAA,EAHA;QAIA,IAAA,EAAA;MAJA,CADA;MAOA,kBAAA,EAAA,KAPA;MAQA,oBAAA,EAAA;IARA,CAAA;EAUA,CAbA;EAcA,OAAA,EAAA;IACA,QADA,sBACA;MAAA;;MACA,IAAA,KAAA,IAAA,CAAA,QAAA,IAAA,KAAA,IAAA,CAAA,eAAA,EAAA;QACA,KAAA,kBAAA,GAAA,IAAA;QACA,KAAA,oBAAA,GAAA,2CAAA;MACA,CAHA,MAGA;QACA,WAAA,CACA,QADA,CACA,KAAA,IADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;UACA,IAAA,QAAA,CAAA,MAAA,IAAA,GAAA,EAAA;YACA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA;cACA,IAAA,EAAA,QADA;cAEA,KAAA,EAAA;gBAAA,YAAA,EAAA;cAAA;YAFA,CAAA;UAIA;QACA,CATA,WAUA,UAAA,KAAA,EAAA;UACA,IAAA,QAAA,GAAA,KAAA,CAAA,QAAA;UACA,KAAA,CAAA,kBAAA,GAAA,IAAA;;UACA,IAAA,QAAA,CAAA,MAAA,KAAA,GAAA,EAAA;YACA,KAAA,CAAA,oBAAA,GAAA,gCAAA;UACA;QACA,CAhBA;MAiBA;IACA,CAxBA;IAyBA,WAzBA,yBAyBA;MACA,KAAA,kBAAA,GAAA,KAAA;MACA,KAAA,oBAAA,GAAA,4CAAA;IACA;EA5BA;AAdA,CAAA","sourcesContent":["<template>\n  <div id=\"register\" class=\"text-center\">\n    <form class=\"form-register\" @submit.prevent=\"register\">\n      <h1 class=\"h3 mb-3 font-weight-normal\">Create Account</h1>\n      <div class=\"alert alert-danger\" role=\"alert\" v-if=\"registrationErrors\">\n        {{ registrationErrorMsg }}\n      </div>\n      <label for=\"username\" class=\"sr-only\">Username</label>\n      <input\n        type=\"text\"\n        id=\"username\"\n        class=\"form-control\"\n        placeholder=\"Username\"\n        v-model=\"user.username\"\n        required\n        autofocus\n      />\n      <label for=\"password\" class=\"sr-only\">Password</label>\n      <input\n        type=\"password\"\n        id=\"password\"\n        class=\"form-control\"\n        placeholder=\"Password\"\n        v-model=\"user.password\"\n        required\n      />\n      <input\n        type=\"password\"\n        id=\"confirmPassword\"\n        class=\"form-control\"\n        placeholder=\"Confirm Password\"\n        v-model=\"user.confirmPassword\"\n        required\n      />\n      <router-link :to=\"{ name: 'login' }\">Have an account?</router-link>\n      <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">\n        Create Account\n      </button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport authService from '../services/AuthService';\n\nexport default {\n  name: 'register',\n  data() {\n    return {\n      user: {\n        username: '',\n        password: '',\n        confirmPassword: '',\n        role: 'user',\n      },\n      registrationErrors: false,\n      registrationErrorMsg: 'There were problems registering this user.',\n    };\n  },\n  methods: {\n    register() {\n      if (this.user.password != this.user.confirmPassword) {\n        this.registrationErrors = true;\n        this.registrationErrorMsg = 'Password & Confirm Password do not match.';\n      } else {\n        authService\n          .register(this.user)\n          .then((response) => {\n            if (response.status == 201) {\n              this.$router.push({\n                path: '/login',\n                query: { registration: 'success' },\n              });\n            }\n          })\n          .catch((error) => {\n            const response = error.response;\n            this.registrationErrors = true;\n            if (response.status === 400) {\n              this.registrationErrorMsg = 'Bad Request: Validation Errors';\n            }\n          });\n      }\n    },\n    clearErrors() {\n      this.registrationErrors = false;\n      this.registrationErrorMsg = 'There were problems registering this user.';\n    },\n  },\n};\n</script>\n\n<style></style>\n"],"sourceRoot":"src/views"},"metadata":{},"sourceType":"module"}