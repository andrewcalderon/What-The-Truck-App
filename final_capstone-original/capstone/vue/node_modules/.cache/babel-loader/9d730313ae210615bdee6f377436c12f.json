{"ast":null,"code":"import \"core-js/modules/es.json.stringify.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nVue.use(Vuex);\n/*\n * The authorization header is set for axios when you login but what happens when you come back or\n * the page is refreshed. When that happens you need to check for the token in local storage and if it\n * exists you should set the header so that it will be attached to each request\n */\n\nvar currentToken = localStorage.getItem('token');\nvar currentUser = JSON.parse(localStorage.getItem('user'));\n\nif (currentToken != null) {\n  axios.defaults.headers.common['Authorization'] = \"Bearer \".concat(currentToken);\n}\n\nexport default new Vuex.Store({\n  state: {\n    token: currentToken || '',\n    user: currentUser || {}\n  },\n  mutations: {\n    SET_AUTH_TOKEN: function SET_AUTH_TOKEN(state, token) {\n      state.token = token;\n      localStorage.setItem('token', token);\n      axios.defaults.headers.common['Authorization'] = \"Bearer \".concat(token);\n    },\n    SET_USER: function SET_USER(state, user) {\n      state.user = user;\n      localStorage.setItem('user', JSON.stringify(user));\n    },\n    LOGOUT: function LOGOUT(state) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      state.token = '';\n      state.user = {};\n      axios.defaults.headers.common = {};\n    }\n  }\n});","map":{"version":3,"names":["Vue","Vuex","axios","use","currentToken","localStorage","getItem","currentUser","JSON","parse","defaults","headers","common","Store","state","token","user","mutations","SET_AUTH_TOKEN","setItem","SET_USER","stringify","LOGOUT","removeItem"],"sources":["/Users/punchcode/Desktop/What-The-Truck-App/final_capstone/capstone/vue/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios'\n\nVue.use(Vuex)\n\n/*\n * The authorization header is set for axios when you login but what happens when you come back or\n * the page is refreshed. When that happens you need to check for the token in local storage and if it\n * exists you should set the header so that it will be attached to each request\n */\nconst currentToken = localStorage.getItem('token')\nconst currentUser = JSON.parse(localStorage.getItem('user'));\n\nif(currentToken != null) {\n  axios.defaults.headers.common['Authorization'] = `Bearer ${currentToken}`;\n}\n\nexport default new Vuex.Store({\n  state: {\n    token: currentToken || '',\n    user: currentUser || {}\n  },\n  mutations: {\n    SET_AUTH_TOKEN(state, token) {\n      state.token = token;\n      localStorage.setItem('token', token);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`\n    },\n    SET_USER(state, user) {\n      state.user = user;\n      localStorage.setItem('user',JSON.stringify(user));\n    },\n    LOGOUT(state) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      state.token = '';\n      state.user = {};\n      axios.defaults.headers.common = {};\n    }\n  }\n})\n"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEAF,GAAG,CAACG,GAAJ,CAAQF,IAAR;AAEA;AACA;AACA;AACA;AACA;;AACA,IAAMG,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAArB;AACA,IAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAApB;;AAEA,IAAGF,YAAY,IAAI,IAAnB,EAAyB;EACvBF,KAAK,CAACQ,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,qBAA2DR,YAA3D;AACD;;AAED,eAAe,IAAIH,IAAI,CAACY,KAAT,CAAe;EAC5BC,KAAK,EAAE;IACLC,KAAK,EAAEX,YAAY,IAAI,EADlB;IAELY,IAAI,EAAET,WAAW,IAAI;EAFhB,CADqB;EAK5BU,SAAS,EAAE;IACTC,cADS,0BACMJ,KADN,EACaC,KADb,EACoB;MAC3BD,KAAK,CAACC,KAAN,GAAcA,KAAd;MACAV,YAAY,CAACc,OAAb,CAAqB,OAArB,EAA8BJ,KAA9B;MACAb,KAAK,CAACQ,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,qBAA2DG,KAA3D;IACD,CALQ;IAMTK,QANS,oBAMAN,KANA,EAMOE,IANP,EAMa;MACpBF,KAAK,CAACE,IAAN,GAAaA,IAAb;MACAX,YAAY,CAACc,OAAb,CAAqB,MAArB,EAA4BX,IAAI,CAACa,SAAL,CAAeL,IAAf,CAA5B;IACD,CATQ;IAUTM,MAVS,kBAUFR,KAVE,EAUK;MACZT,YAAY,CAACkB,UAAb,CAAwB,OAAxB;MACAlB,YAAY,CAACkB,UAAb,CAAwB,MAAxB;MACAT,KAAK,CAACC,KAAN,GAAc,EAAd;MACAD,KAAK,CAACE,IAAN,GAAa,EAAb;MACAd,KAAK,CAACQ,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,GAAgC,EAAhC;IACD;EAhBQ;AALiB,CAAf,CAAf"},"metadata":{},"sourceType":"module"}